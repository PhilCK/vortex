
class CameraGameController : GameComponent
{
	// ** Engine Hooks ** //

	private void onStart() override
	{
		registerForEvent(2);

		// Get/Set the camera component
		{
			@m_cameraComponent = getOwner().getComponent("Camera");

			// No camera component was included in the desc, try and add one.
			if(m_cameraComponent is null)
			{
				// getOwner().addComponent("Camera");
				@m_cameraComponent = getOwner().getComponent("Camera");

				if(m_cameraComponent is null)
				{
					Print("No camera component.");
				}
			}

			// Set the camera up.
			if(m_cameraComponent !is null)
			{
				m_cameraComponent.makeActiveCamera();
				m_cameraComponent.setPosition(m_position);

				Math::Vec3 lookat = {0.f, 0.f, 0.f};
				m_cameraComponent.setLookAt(lookat);
			}
		}
	}



	private bool onEvent(const Event @data)
	{
		const uint playerMoveID = getOwner().getEventManager().getEventID("ShipMove");

		if(data.getID() == playerMoveID)
		{
			// Very bad calculation of cam position
			Math::Vec3 pos = data.at(0).asVec3();
			pos.z = 25.f;

			m_cameraComponent.setPosition(pos);
		}

		return false;
	}


	// ** Member Vars ** //

	private CameraComponent 	@m_cameraComponent;
	private Math::Vec3 			m_position = {0.f, 0.f, 25.f};
};
